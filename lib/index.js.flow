// @flow

declare export var LEVELS_SYSLOG: {
  EMERGENCY: string,
  ALERT: string,
  CRITICAL: string,
  ERROR: string,
  WARNING: string,
  NOTICE: string,
  INFORMATIONAL: string,
  DEBUG: string
};

type bugsy$CreateOptions = {
  level?: string;
  code?: string;
  inherits?: Function;
};

export type CreateOptions = bugsy$CreateOptions;

declare export function create(name: string, message: string, options?: CreateOptions): Class<Error>;

declare class bugsy$Branch {
  drop(): this;
  transform(fn: (err: Error) => void): this;
  reduce(fn: (value: ?any, err: Error) => void): this;
}

declare export class Branch extends bugsy$Branch {};

declare export function instanceOf(value: Class<Error>): Branch;
declare export function code(value: Class<Error>): Branch;
declare export function always(value: Class<Error>): Branch;

declare export function handle(fn: Function, branches: Branch[]): void;

declare export function reduce<T>(err: Error, branches: Branch[]): T;